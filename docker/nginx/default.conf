server {
    listen 80;
    
    root /var/www/html/public/;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # [X-Frame-Options] コンテンツが他のサイトに埋め込まれないよう保証し、
    # クリックジャッキング攻撃を防ぐ。
    # 「sameorigin」で同じオリジンのサイトなら読み込み可能
    add_header X-Frame-Options "SAMEORIGIN";

    # [X-XSS-Protection] クロスサイトスクリプティング(XSS)攻撃を検出したときに
    # ページの読み込みを停止するためのもの
    # 「1;mode=block」でXSSフィルタリングを有効化し、攻撃を検知すると
    # ページのレンダリングを停止させる
    add_header X-XSS-Protection "1; mode=block";

    # [X-Content-Type-Options]ファイルダウンロード時にファイル形式をブラウザに
    # 誤認させてJavascriptを実行させてしまう攻撃(XSS攻撃)を防ぐことができる。
    add_header X-Content-Type-Options "nosniff";

    # リクエストのURLが”/”で終わっている時に
    # インデックスとして使われるファイル名を設定
    index index.php index.html index.htm;

    charset utf-8;

    #[locationディレクティブ]では「URIのパス毎の設定」を記述出来る
    # 括弧{ }で囲まれた部分がlocationコンテキスト
    location / {
        # try_files(ファイルの存在チェック)の内容
            # $urlにファイルがあるか、$url/にディレクトリがあるか
            #無ければ/index.php?$query_stringへ内部リダイレクト
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    # 拡張子がphpであるファイルに対して処理する
    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        # Laravelのindex.phpのパスを指定
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # 
    location ~ /\.(?!well-known).* {
        deny all;
    }
}